{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const usersSlice = createSlice({\n  name: 'user',\n  initialState: {\n    users: []\n  },\n  reducers: {\n    addUser: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.users.push(payload);\n    },\n    deleteUser: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.users = state.users.filter(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id !== payload;\n      });\n    },\n    updateStatus: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.users = state.users.map(user => {\n        if (user.id !== payload) {\n          return user;\n        } else {\n          return { ...user,\n            status: user.status === 'offline' ? 'online' : 'offline'\n          };\n        }\n      });\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  updateStatus\n} = usersSlice.actions;\nexport const usersReducer = usersSlice.reducer;","map":{"version":3,"sources":["/Users/marinachuhlib/Desktop/GitHub/redux-toolkit-practice/src/redux/users/usersSlice.js"],"names":["createSlice","usersSlice","name","initialState","users","reducers","addUser","state","payload","push","deleteUser","filter","id","updateStatus","map","user","status","actions","usersReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;AACpCE,EAAAA,IAAI,EAAE,MAD8B;AAEpCC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAFsB;AAGpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,WAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAC/BD,MAAAA,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBD,OAAjB;AACD,KAHO;AAIRE,IAAAA,UAAU,EAAE,CAACH,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAClCD,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKJ,OAAnB;AAAA,OAAnB,CAAd;AACD,KANO;AAORK,IAAAA,YAAY,EAAE,CAACN,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AACpCD,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYU,GAAZ,CAAiBC,IAAD,IAAU;AACtC,YAAIA,IAAI,CAACH,EAAL,KAAYJ,OAAhB,EAAyB;AACvB,iBAAOO,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,EAAC,GAAGA,IAAJ;AAAUC,YAAAA,MAAM,EAAED,IAAI,CAACC,MAAL,KAAgB,SAAhB,GAA4B,QAA5B,GAAuC;AAAzD,WAAP;AACD;AACF,OANa,CAAd;AASD;AAjBO;AAH0B,CAAD,CAA9B;AAwBP,OAAO,MAAM;AAAEV,EAAAA,OAAF;AAAWI,EAAAA,UAAX;AAAuBG,EAAAA;AAAvB,IAAwCZ,UAAU,CAACgB,OAAzD;AACP,OAAO,MAAMC,YAAY,GAAGjB,UAAU,CAACkB,OAAhC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const usersSlice = createSlice({\n  name: 'user',\n  initialState: { users: [] },\n  reducers: {\n    addUser: (state, { payload }) => {\n      state.users.push(payload);\n    },\n    deleteUser: (state, { payload }) => {\n      state.users = state.users.filter(({ id }) => id !== payload);\n    },\n    updateStatus: (state, { payload }) => {\n      state.users = state.users.map((user) => {\n        if (user.id !== payload) {\n          return user;\n        } else {\n          return {...user, status: user.status === 'offline' ? 'online' : 'offline'}\n        }\n      })\n\n\n    }\n  },\n});\n\nexport const { addUser, deleteUser, updateStatus } = usersSlice.actions;\nexport const usersReducer = usersSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}